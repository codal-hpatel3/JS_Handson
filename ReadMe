üöÄ JavaScript Learning Code

Welcome to the JavaScript Learning Code repository! üéâ
This repo is full of simple, hands-on examples to help you learn JavaScript step by step.

üìÇ Project Structure

JavaScript.js ‚Üí First ‚ÄúHello JavaScript‚Äù log.

üî¢ Operators

Operators.js ‚Üí Learn arithmetic (+, -, *), comparison (==, ===), logical (&&, ||, !), and assignment (=, +=, -=) operators.

üì¶ Variables & Data Types

Variables.js ‚Üí Using var, let, and const, with scope and reassignment rules.

DataTypes.js ‚Üí Primitive types (string, number, boolean, null, undefined, symbol, bigint).

ConstObject.js ‚Üí const objects can change properties but not be reassigned.

üßë‚Äçüíª Objects

JavaScriptObjects.js ‚Üí Create objects, add/access properties, constructors, methods, and loops over object properties.

üìä Arrays

Arrays.js ‚Üí Basics of creating and using arrays.

ArrayMethods.js ‚Üí Common methods like push, pop, shift, unshift, map, filter, reduce.

‚ö†Ô∏è Error Handling

TryCatchInJavaScript.js ‚Üí Handle errors with try...catch.

‚è≥ Asynchronous JavaScript

JsAsyncAwait.js ‚Üí Learn callbacks, promises, and async/await with simple examples.

üèóÔ∏è ES6 Classes

ClassBasics.js ‚Üí Basic class syntax.

Inheritance.js ‚Üí Extend classes with extends and super.

StaticMethods.js ‚Üí Static properties and methods.

üìö Topics Covered

‚úî Variables: var, let, const
‚úî Scope (block vs global)
‚úî Redeclaration & reassignment
‚úî Primitive data types
‚úî Operators (arithmetic, logical, comparison)
‚úî Objects: properties, methods, prototypes
‚úî Arrays: creation & common methods
‚úî Error handling (try...catch)
‚úî Async JavaScript: callbacks, promises, async/await
‚úî ES6 Classes: basics, inheritance, static methods

üñ•Ô∏è Quick Examples
Variables
let name = "Himen";
const age = 25;
var city = "Ahmedabad";

Arrays
let numbers = [1, 2, 3];
numbers.push(4); // [1,2,3,4]

Objects
let user = { name: "Himen", age: 25 };
console.log(user.name); // Himen

Promise + Async/Await
function greet() {
  return new Promise(resolve => {
    setTimeout(() => resolve("Hello!"), 1000);
  });
}

async function showGreeting() {
  let message = await greet();
  console.log(message);
}

showGreeting(); // "Hello!" after 1s

Class Example
class Animal {
  constructor(name) {
    this.name = name;
  }
  speak() {
    console.log(`${this.name} makes a noise.`);
  }
}

class Dog extends Animal {
  speak() {
    console.log(`${this.name} barks.`);
  }
}

let dog = new Dog("Tommy");
dog.speak(); // Tommy barks.

‚ñ∂Ô∏è How to Run

Install Node.js.

Open terminal and run:

node path/to/file.js


Example:

node JavaScriptClass/ClassBasics.js
